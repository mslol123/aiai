package com.jxky.bgxs.controller.xc;


import com.jxky.bgxs.entity.Info;
import com.jxky.bgxs.entity.User;
import com.jxky.bgxs.service.xc.InfoService;
import com.jxky.bgxs.service.zq.UserService;
import org.apache.commons.net.ftp.FTPClient;
import org.apache.commons.net.ftp.FTPReply;
import org.apache.ibatis.annotations.Param;
import org.apache.shiro.SecurityUtils;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.multipart.MultipartFile;

import javax.annotation.Resource;
import java.io.IOException;
import java.io.InputStream;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;


@Controller
@RequestMapping("/setting")

public class InfoController {
   @Resource
    private InfoService infoService;
   @Resource
   private UserService userService;


    @RequestMapping("/info")
   public String userInfo(Model model){
       User user =(User) SecurityUtils.getSubject().getPrincipal();
       Info info = infoService.findById(user.getId());

       model.addAttribute("info",info);
       return "setting/userInfo";
   }

    @RequestMapping("/add")
    public String add(Info info, @Param("birth")String birth){
        User user =(User) SecurityUtils.getSubject().getPrincipal();
        info.setId(user.getId());
        try {
            Date date = new SimpleDateFormat("yyyy-MM-dd").parse(birth);
            info.setBirthday(date);
        } catch (ParseException e) {
            e.printStackTrace();
        }
        if(info.getSex().equals("0")){
            info.setSex("男");
        }else if(info.getSex().equals("1")){
            info.setSex("女");
        }
        infoService.upadate(info);
        user.setNickname(info.getNickname());
        userService.update(user);
        return "redirect:/setting/info";
    }

    @RequestMapping("/preupdate")
    public String preupdate(Model model){
        User user =(User) SecurityUtils.getSubject().getPrincipal();
        Info info = infoService.findById(user.getId());

        model.addAttribute("info",info);
        return "setting/userAvatar";
    }


    @RequestMapping("/update")
    public String update(MultipartFile file,Info info){
        if(file!=null||file.getSize()>0){
            info.setImage(file.getOriginalFilename()+info.getId());
            //使用FTP进行图片远程上传
            try{
                FTPClient ftp=new FTPClient();
                //FTP服务器的IP和端口
                ftp.connect("192.168.54.5",21);
                //匿名用户必须使用anonymous登录，密码是邮箱
                boolean login=ftp.login("anonymous","1756229479@qq.com");
                System.out.println(login);

                //获取ftp是否响应的状态吗
                int replyCode=ftp.getReplyCode();
                //判断ftp是否正确的回执（一般情况下此处响应失败是因为登录失败了）
                if(!FTPReply.isPositiveCompletion(replyCode)){
                    System.out.println("FTP响应失败");
                    return "fail";
                }
                //如果登录成功，开始上传
                //配置上传文件的类型（BINARY_FILE_TYPE二进制文件，可以上传所有文件）
                ftp.setFileType(FTPClient.BINARY_FILE_TYPE);
                //创建一个文件夹，如果文件夹已存在则不会重新创建
                ftp.makeDirectory("images");
                //将ftp要操作的文件夹指定为images（将图片上传到iamges文件夹下）
                ftp.changeWorkingDirectory("images");
//                    FileInputStream fileInputStream=new FileInputStream("D:\\javaee\\1804\\课堂笔记\\images\\jmeter-http001.png");


                InputStream inputStream = file.getInputStream();
                //将图片通过ftp写入独立的图片服务器
                ftp.storeFile(file.getOriginalFilename()+info.getId(),inputStream);
                //ftpClient.dele(filename);
                //退出登录，释放资源
                ftp.logout();
            }catch(IOException e){
                e.printStackTrace();
            }
        }
        infoService.upadate(info);
        return "redirect:/setting/preupdate";
    }
}
